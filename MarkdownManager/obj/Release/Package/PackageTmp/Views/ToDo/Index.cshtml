@model PagedList.IPagedList<MarkdownManager.Models.ToDo>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "ToDo's";
}

<h2>ToDo's</h2>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-default" })
</p>

@using (Html.BeginForm("Index", "ToDo", FormMethod.Get))
{
    <p>
        Find by Tag: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}
    
@{
    if (ViewData["TodoListItems"] == null)
    {
        <table class="table">
            <tr>
                <th>
                    @Html.ActionLink("Description", "Index", new { sortOrder = ViewBag.DescriptionSortParam, currentFilter=ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink("Done", "Index", new { sortOrder = ViewBag.IsDoneSortParam, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink("Tag", "Index", new { sortOrder = ViewBag.TagSortParam, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.CheckBoxFor(modelItem => item.IsDone, new
                   {
                       @id = item.Id,
                       @data_url=@Url.Action("Edit", "ToDo"),
                       @desc = item.Description,
                       @tag = item.Tag,
                       @onclick = "sendUpdate(event)"
                   })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Tag)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }

        </table>

    }
    else
    {
        @Html.Raw("<p>You don't have any ToDo items, you should make some!</p>");
    }

}

    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))






<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.0/jquery.js"></script>
<script>


        function sendUpdate(event) {

            var id = event.target.id;
            var checkboxStatus = $('#' + id).prop("checked");
            var desc = $('#' + id).attr("desc");
            var tag = $('#' + id).attr("tag");
            console.log(checkboxStatus);
            console.log(desc);
            console.log(tag);

            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            $.ajax({
                url: $('#' + id).data('url'),
                type: 'POST',
                data: {
                    __RequestVerificationToken: token,
                    Id: id,
                    IsDone: checkboxStatus,
                    Description: desc,
                    Tag: tag
                },
                success: function (result) {
                    alert("Todo Successful Updated");
                },
                error: function (err) {
                    console.log("submit error");
                }
            });
            //return false;
        }
</script>

