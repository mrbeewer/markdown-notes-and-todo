@model PagedList.IPagedList<MarkdownManager.Models.Document>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Notes:";
    var deleteId = 0;
}

<h2>Notes:</h2>

<p>
    <button class="btn btn-primary" data-toggle="modal" data-target="#myModal">
        Create New Note
    </button>
</p>


<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Create New Note</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("_CreateNotePartial", new MarkdownManager.Models.Document())
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>






@using (Html.BeginForm("Index", "Document", FormMethod.Get))
{
    <div class="container" style="padding: 0;">
        <div class="col-xs-8 col-md-4 text-center" style="margin: 0 0 10px 0; padding: 0;">
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @id = "searchString", @class = "form-control", @placeholder = "Filter by ParentFolder" })
        </div>
        <div class="col-xs-4 col-md-2 text-center" style="margin: 0 0 10px 0; padding: 0;">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
}


<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("ParentFolder", "Index", new { sortOrder = ViewBag.ParentFolderSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) { 
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ParentFolder)
        </td>
        <td>

            
            <div class="col-xs-12">
            @Html.ActionLink("Edit / View", "Edit", new { id = item.Id }, new { @class = "btn btn-primary" })
            @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-primary" })
                @using (Html.BeginForm("Delete", "Document", new { id = item.Id }))
                {
                    @Html.AntiForgeryToken()
                    <input type="submit" value="Delete" class="btn btn-danger" onclick="return confirm('Are you sure?')" />
                }
            </div>
        </td>
    </tr>
}
</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

pt>