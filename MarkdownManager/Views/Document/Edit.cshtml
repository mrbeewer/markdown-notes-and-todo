@model MarkdownManager.Models.Document

@{
    ViewBag.Title = "Edit";
}

<meta name="viewport" content="width=device-width, initial-scale=1">

<script src="https://cdnjs.cloudflare.com/ajax/libs/es5-shim/4.0.5/es5-shim.min.js"></script>
<script src="https://cdn.jsdelivr.net/jquery/1.11.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/lodash/2.4.1/lodash.js"></script>

<!-- Bootstrap Toggle -->
<link rel="stylesheet" href="~/Content/bootstrap-toggle.less">
<script src="~/Scripts/bootstrap-toggle.js"></script>

<!-- syntax highlighting CSS -->
<script src="https://cdn.jsdelivr.net/highlight.js/8.4.0/highlight.min.js"></script>
<link rel="stylesheet" href="~/Content/Highlight/solarized_dark.css">
<script src="//cdn.jsdelivr.net/highlight.js/9.1.0/highlight.min.js"></script>

<!-- Remarkable Markdown Conversion -->
<script src="~/Scripts/remarkable.js"></script>
<link rel="stylesheet" href="~/Content/remarkable.css">
<script src="~/Scripts/remarkable-index.js"></script>



<div class="row">
    <div class="col-xs-6 col-md-4">
        <h2>Edit Note</h2>
        <h6><em>Markdown Conversion Powered By <a href="https://github.com/jonschlinkert/remarkable">Jon Schlinkert - Remarkable</a></em></h6>
    </div>
    <div class="col-xs-12 col-md-8 text-right" style="padding-top: 30px;">
        @Html.ActionLink("Back to List", "Index", null, new { @style="margin-right:10px;", @class = "btn btn-default" })
        <label class="checkbox-inline">
            <input id="markdown-view" type="checkbox" checked data-toggle="toggle">Markdown
        </label>
        <label class="checkbox-inline">
            <input id="html-view" type="checkbox" checked data-toggle="toggle">HTML
        </label>
        <label class="checkbox-inline">
            <input id="easy-todo" type="checkbox" checked data-toggle="toggle">ToDo
        </label>
    </div>
</div>

<div id="todo-partial" style="margin: 0 0 15px 0;">
    @Html.Partial("View", new MarkdownManager.Models.ToDo())
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin: 20px 0 0 0;">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="container" style="padding: 0; margin-bottom:10px;">
            <div class="text-center">
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @placeholder = "Note Name", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-5">
                    @Html.EditorFor(model => model.ParentFolder, new { htmlAttributes = new { @placeholder = "Tag", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParentFolder, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <input type="submit" value="Save Note" class="btn btn-default" style="width: 100%;" />
                </div>

            </div>
        </div>

        <div class="container full-height form-control">
            <div class="row full-height">
                <div id="markdown-input" class="col-md-6 full-height">
                    <div id="markdown-buttons" class="demo-control"><a href="#" class="source-clear">clear</a><a id="permalink" href="./" title="Share this snippet as link"><strong>permalink</strong></a></div>
                    @Html.TextAreaFor(model => model.Text, new { @id = "markdown-text", @class = "source full-height form-control" })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
                <!-- output panel -->
                <section id="html-output" class="col-md-6 full-height">
                    <div id="html-buttons" class="demo-control"><a href="#" data-result-as="html">html</a><a href="#" data-result-as="src">source</a></div>
                    <div class="result-html full-height"></div>
                    <pre class="result-src full-height"><code class="result-src-content full-height"></code></pre>
                    <pre class="result-debug full-height"><code class="result-debug-content full-height"></code></pre>
                </section>
            </div>
        </div>
    </div>
}



<script>
        var elMarkdownInput = $('#markdown-input');
        var elMarkdown = $('#markdown-view');

        var elHtml = $('#html-view');
        var elHtmlOutput = $('#html-output');

        elMarkdown.change(function () {
            var status = elMarkdown.prop("checked");
            //alert("clicked");
            console.log(status);

            if (!status) {
                // hide the markdown view, label, buttons
                elMarkdownInput.css("display", "none");
                // expand the html view
                elHtmlOutput.toggleClass("col-md-6", false);
                elHtmlOutput.toggleClass("col-md-12", true);
            } else {
                // show the markdown view, label, buttons
                elMarkdownInput.css("display", "block");
                // shrink the html view
                elHtmlOutput.toggleClass("col-md-12", false);
                elHtmlOutput.toggleClass("col-md-6", true);
            }
        });

        elHtml.change(function () {
            var status = elHtml.prop("checked");
            //alert("clicked");
            console.log(status);

            if (!status) {
                // hide the html section
                elHtmlOutput.css("display", "none");
                // expand the markdown section
                elMarkdownInput.toggleClass("col-md-6", false);
                elMarkdownInput.toggleClass("col-md-12", true);
            } else {
                // show the html section
                elHtmlOutput.css("display", "block");
                // shrink the markdown section
                elMarkdownInput.toggleClass("col-md-12", false);
                elMarkdownInput.toggleClass("col-md-6", true);
            }
        });

        var elPartial = $('#todo-partial');
        var elEasyTodo = $('#easy-todo');

        elEasyTodo.change(function () {
            var status = elEasyTodo.prop("checked");
            //alert("clicked");
            console.log(status);

            if (status) {
                // show the todo partial
                elPartial.css("display", "block");
            } else {
                // hide the todo partial
                elPartial.css("display", "none");
            }
        });


</script>





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
}
